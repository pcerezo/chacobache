name: CI/CD for Fullstack App

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      API_URL: ${{ secrets.API_URL }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Login to Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CHACO_TOKEN_2 }}
    
    - name: Instalar dependencias
      run: npm install
    
    - name: Construir aplicación Angular
      run: npm run build

    - name: Build image and push
      run: |
        docker build ./ -t ghcr.io/${{ github.repository }}/chacobache-frontend:latest
        docker push ghcr.io/${{ github.repository }}/chacobache-frontend:latest
  
  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Loguéate en el GitHub Container Registry
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CHACO_TOKEN_2 }}

      - name: Reemplazar la URL del backend en environment.ts
        run: |
          echo "export const environment = {" > src/app/environments/environment.ts
          echo "  production: true," >> src/app/environments/environment.ts
          echo "  apiUrl: '${{ secrets.API_URL }}'" >> src/app/environments/environment.ts
          echo "};" >> src/app/environments/environment.ts

      # 3. Ejecutar el build del frontend Angular
      - name: Build Angular App
        run: |
          npm install
          npm run build

      # 3. Despliega el contenedor
      - name: Deploy Docker container
        run: |
          docker stop chacobache-frontend || true
          docker rm chacobache-frontend || true
          docker run -d --name chacobache-frontend -p 4200:4200 ghcr.io/${{ github.repository }}/chacobache-frontend:latest

      - name: Move files to root
        run: |
          if [[ -d "./docs/browser" ]]; 
            then mv ./docs/browser/* ./docs/ 
          fi
          rm -rf ./docs/browser

      # 4. Crear el archivo .nojekyll
      - name: Add .nojekyll file
        run: echo > docs/.nojekyll

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.CHACO_TOKEN_2 }}
          publish_branch: gh-pages
          publish_dir: ./